
@{
    ViewData["Title"] = "Providers";
}

<h3 class="text-center">List of Providers</h3>

<div class="text-right">
    <a class="btn btn-dark" asp-action="Create">Add a Provider</a>
</div>
<div class="clearfix" />

<!-- Body -->
<br />
<div class="card">
    <div class="card-body">
        <table class="table table-striped" id="datatab">
            <thead>
                <tr>
                    <th>S/N</th>
                    <th>
                        Name
                    </th>
                    <th>
                        Address
                    </th>
                    <th>
                        Location
                    </th>
                    <th>
                        State
                    </th>
                    @if (User.IsInRole(Enum.GetName(typeof(ProfileTypes), ProfileTypes.SU)) ||
              User.IsInRole(Enum.GetName(typeof(ProfileTypes), ProfileTypes.HR)))
                    {
                        <th>HMO</th>
                    }
                    <th></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@if (User.IsInRole(Enum.GetName(typeof(ProfileTypes), ProfileTypes.SU)))
{
    <br />
    <div class="row">
        <div class="offset-3 col-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Upload Providers</h5>
                </div>
                <div class="card-body">
                    <form asp-action="ImportProviders" method="post" enctype="multipart/form-data">
                        <div class="form-group row">
                            <label class="col-form-label col-4">Select Template Rule:</label>
                            <div class="col-8">
                                <select class="form-control" name="profileId"
                                        data-val-required="The Import Profile is required.">
                                    @{
                                        var profiletypes = (SelectList)ViewBag.ProfileTypes;
                                        var pt = profiletypes.FirstOrDefault();
                                    }
                                    @foreach (var ptype in profiletypes)
                                    {
                                        if (pt.Text == ptype.Text)
                                        {
                                            <option value="@ptype.Value" selected="selected">@ptype.Text</option>
                                        }
                                        else
                                        {
                                            <option value="@ptype.Value">@ptype.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-4">HMO:</label>
                            <div class="col-8">
                                <select class="form-control" name="hmoId"
                                        data-val-required="The HMO is required.">
                                    @{
                                        var hmos = (SelectList)ViewBag.HMOs;
                                        var hmo = hmos.FirstOrDefault();
                                    }
                                    @foreach (var h in hmos)
                                    {
                                        if (hmo.Text == h.Text)
                                        {
                                            <option value="@h.Value" selected="selected">@h.Text</option>
                                        }
                                        else
                                        {
                                            <option value="@h.Value">@h.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-4">Upload template for Providers data:</label>
                            <div class="col-8">
                                <input type="file" name="file">
                            </div>
                        </div>
                        <hr />
                        <div class="form-group row">
                            <div class="col-12 justify-content-center">
                                <input class="btn btn-sm btn-info" type="submit" value="Upload">
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/libc/datatables/media/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="~/libc/datatables/media/css/dataTables.bootstrap4.min.css" />

    <environment include="Development">
        <link rel="stylesheet" href="~/libc/datatables/media/css/buttons.dataTables.min.css" />
        <link rel="stylesheet" href="~/libc/datatables/media/css/dataTables.searchHighlight.css" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css" />
        <link rel="stylesheet" href="https://cdn.datatables.net/plug-ins/1.10.19/features/searchHighlight/dataTables.searchHighlight.css" />
    </environment>
}
@section Scripts {

    <script src="~/libc/datatables/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/libc/datatables/media/js/jquery.highlight.js" type="text/javascript"></script>

    <environment include="Development">
        <script src="~/libc/datatables/media/js/dataTables.searchHighlight.min.js" type="text/javascript"></script>

        <script src="~/libc/datatables/media/js/dataTables.buttons.min.js" type="text/javascript"></script>
        <script src="~/libc/datatables/media/js/jszip.min.js" type="text/javascript"></script>
        <script src="~/libc/datatables/media/js/pdfmake.min.js" type="text/javascript"></script>
        <script src="~/libc/datatables/media/js/vfs_fonts.js" type="text/javascript"></script>
        <script src="~/libc/datatables/media/js/buttons.html5.min.js" type="text/javascript"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://cdn.datatables.net/plug-ins/1.10.19/features/searchHighlight/dataTables.searchHighlight.min.js" type="text/javascript"></script>

        <script src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js" type="text/javascript"></script>
        <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js" type="text/javascript"></script>
    </environment>

    <script type="text/javascript">

        function InitializePage() {

            var oTable = $('#datatab').DataTable({
                "lengthMenu": [[50, 100], ["50", "100"]],
                "dom": 'Bfrtip',
                "buttons": [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                "searchHighlight": true,
                "serverSide": true,
                "ajax": {
                    "type": "POST",
                    "url": '/providers/List',
                    "contentType": 'application/json; charset=utf-8',
                    'data': function (data) { return data = JSON.stringify(data); }
                },
                "processing": true,
                "paging": true,
                "deferRender": true,
                "columns": [
                    {
                        data: 'sn',
                        sortable: false,
                        searchable: false
                    },
                    {
                        data: 'name',
                    },
                    {
                        data: 'address',
                    },
                    {
                        data: 'location',
                    },
                    {
                        data: 'state',
                    },
@if (User.IsInRole(Enum.GetName(typeof(ProfileTypes), ProfileTypes.SU)) ||
User.IsInRole(Enum.GetName(typeof(ProfileTypes), ProfileTypes.HR)))
{
    <text>
                    {
                        data: 'hmo',
                    },
    </text>
}
                    {
                        searchable: false,
                        sortable: false,
                        data: "id",
                        "render": function (data, type, full, meta) {
                            return '<a class="btn btn-info btn-sm" title="Details" href="/providers/details/' + data + '">Details</a>&nbsp;<a class="btn btn-light btn-sm" title="Edit" href="/providers/edit/' + data + '">Edit</a>&nbsp;<a class="btn btn-danger btn-sm" title="Delete" href="/providers/delete/' + data + '">Delete</a>';
                        }
                    }
                ]
            });
        }

        (function () {
            InitializePage();
        })();

    </script>
}
